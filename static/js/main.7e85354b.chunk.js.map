{"version":3,"sources":["actions/actions.js","assets/AC-Logo.svg","assets/facebook.svg","assets/googleplus.svg","constants.js","components/NavBar/SideButton/SideButton.js","components/NavBar/NavBar.js","Router.js","components/Modal/Modal.js","components/Login/Login.js","components/SignUp/SignUp.js","App.js","serviceWorker.js","reducers/reducers.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","setPage","toggleModalState","loadUser","fetchAndSetUser","_constants__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_1___default","n","page","type","SET_PAGE_VALUE","payload","isModalOpen","TOGGLE_MODAL","user","LOAD_USER","dispatch","console","log","FETCH_USER_PENDING","axios","get","then","res","FETCH_USER_SUCCESS","data","catch","err","FETCH_USER_FAILED","module","exports","p","SideButton","_ref","visibilityFunction","react_default","a","createElement","className","onClick","height","id","version","viewBox","width","xmlns","y","x","NavBar","classToggle","document","getElementById","classList","toggle","rotations","z","_this","_this2","this","props","name","NavBar_SideButton_SideButton","activeClassName","toggleModal","Component","connect","state","changePage","onPageChange","setUserState","Dashboard","lazy","e","bind","GoogleDashboard","Home","Router","react","fallback","Switch","Route","exact","path","component","modalRoot","Modal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","el","appendChild","removeChild","ReactDOM","createPortal","children","React","Login","onNameChange","event","setState","prevState","objectSpread","target","value","onEmailChange","email","onPasswordChange","password","onLogin","onGoogleLogin","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","src","Logo","alt","action","method","placeholder","href","GoogleLogo","FacebookLogo","SignUp","fetch","headers","Content-Type","body","JSON","stringify","json","auth","assertThisInitialized","onChange","Link","to","App","modalSwitch","components_Modal_Modal","components_Login_Login","components_SignUp_SignUp","BrowserRouter","components_NavBar_NavBar","src_Router","isPending","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initialStatePage","pathname","initialStateModal","initialStateUser","googleID","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","assign","store","createStore","applyMiddleware","reduxThunk","render","es","src_App_0","URL","process","origin","addEventListener","concat","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7e85354b.chunk.js","sourcesContent":["import { \r\n    SET_PAGE_VALUE, \r\n    TOGGLE_MODAL, \r\n    LOAD_USER, \r\n    FETCH_USER_FAILED, \r\n    FETCH_USER_PENDING, \r\n    FETCH_USER_SUCCESS \r\n} from '../constants';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const setPage = (page) => ({\r\n    type: SET_PAGE_VALUE,\r\n    payload: page\r\n})\r\n\r\nexport const toggleModalState = (isModalOpen) => ({\r\n    type: TOGGLE_MODAL,\r\n    payload: isModalOpen\r\n})\r\n\r\nexport const loadUser = (user) => ({\r\n    type: LOAD_USER,\r\n    payload: user\r\n})\r\n\r\nexport const fetchAndSetUser = () => (dispatch) => {\r\n    console.log('fetchin')\r\n    dispatch({type: FETCH_USER_PENDING })\r\n    axios.get('/api/current_user')\r\n        .then(res => dispatch({ type: FETCH_USER_SUCCESS, payload: res.data }))\r\n        .catch( err => dispatch({ type: FETCH_USER_FAILED, payload: err }))\r\n\r\n}","module.exports = __webpack_public_path__ + \"static/media/AC-Logo.a7cd08f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.6b19c336.svg\";","module.exports = __webpack_public_path__ + \"static/media/googleplus.2f1bca5f.svg\";","export const SET_PAGE_VALUE = 'SET_PAGE_VALUE';\r\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\r\nexport const LOAD_USER = 'LOAD_USER';\r\nexport const FETCH_USER_PENDING = 'FETCH_USER_PENDING';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAILED = 'FETCH_USER_FAILED';\r\n","import React from 'react';\r\nimport './SideButton.css';\r\n\r\n\r\nconst SideButton = ({visibilityFunction}) => {\r\n    return(\r\n      <div className=\"SideButton\">\r\n        <div  onClick={visibilityFunction} className='toggle-btn side-toggle'>\r\n          <svg  className=\"nav-btn\" height=\"40px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 512 512\" width=\"512px\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n            <g  className='white'>\r\n              <g className=\"bar-1  trans\" id =\"baricon-1\">\r\n                <rect  height=\"32\" width=\"320\" y=\"335\" x=\"105\"/>\r\n              </g>\r\n              <g className=\"bar-2 trans\"  id =\"baricon-2\">\r\n                <rect  height=\"32\" width=\"320\" y=\"235\" x=\"105\"/>\r\n              </g>\r\n              <g className=\"bar-3 trans\"  id =\"baricon-3\">\r\n                <rect  height=\"32\" width=\"320\" y=\"135\" x=\"105\"/>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>   \r\n    );\r\n}\r\n\r\nexport default SideButton; ","import { connect } from \"react-redux\";\r\nimport React, {Component} from 'react';\r\nimport {  } from 'react-router-dom'\r\nimport SideButton from './SideButton/SideButton';\r\n\r\n\r\nimport './NavBar.css';\r\nimport { setPage, toggleModalState, loadUser, fetchAndSetUser } from '../../actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\tpage: state.changePage.page,\r\n\tisModalOpen: state.toggleModal.isModalOpen,\r\n\tuser: state.fetchAndSetUser.user\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\tonPageChange: (page) => dispatch(setPage(page)),\r\n\ttoggleModal: (isModalOpen) => dispatch(toggleModalState(isModalOpen)),\r\n  setUserState: (user) => dispatch(loadUser(user)),\r\n\tfetchAndSetUser: () => dispatch(fetchAndSetUser())\r\n  \r\n\r\n  }\r\n}\r\n\r\nclass NavBar extends Component {\r\n  classToggle = () => {\r\n    // const navs = document.querySelectorAll('.link-container')\r\n    // navs.forEach(nav => nav.classList.toggle('ToggleShow'));\r\n    document.getElementById('flex-container').classList.toggle('ToggleShow')\r\n  }\r\n\r\n\r\n  rotations =() => {\r\n    let x= document.getElementById(\"baricon-1\");\r\n    x.classList.toggle(\"rotate-1\");\r\n    x.classList.toggle(\"bar-1\");\r\n    \r\n    let y= document.getElementById(\"baricon-2\");\r\n    y.classList.toggle(\"rotate-2\");\r\n    y.classList.toggle(\"bar-2\");\r\n    \r\n    let z= document.getElementById(\"baricon-3\");\r\n    z.classList.toggle(\"rotate-3\");\r\n    z.classList.toggle(\"bar-3\");\r\n    this.classToggle();\r\n  }\r\n  \r\n  render(){\r\n    //const { navPage }  = this.props;\r\n    return(\r\n        <div className=\"Navbar\">\r\n            <div className=\"Navbar__Link Navbar__Link-brand\">\r\n                <div className=\"page-title\">\r\n                    #<span className=\"gray-text\">the</span>Smart<span className=\"red-text\">Cycling</span><span className=\"accent-text\">Experience</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"page-title\">{this.props.user.name}</div>\r\n            <div className=\"Navbar__Link Navbar__Link-toggle\">\r\n                <SideButton visibilityFunction={this.rotations}/>\r\n            </div>\r\n            <nav className=\"Navbar__Items Navbar__Items--right\" id=\"flex-container\">\r\n                <div className=\"Navbar__Link\">\r\n                    <button  className=\"linkStyles button\"    activeClassName=\"nav-active\"  onClick={()=> this.props.toggleModal('login')}    >Login</button>\r\n                </div>\r\n                <div className=\"Navbar__Link\">\r\n                    <button  className=\"linkStyles button\"    activeClassName=\"nav-active\"  onClick={()=> this.props.toggleModal('signup')}    >SignUp</button>\r\n                </div>\r\n                \r\n            </nav>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar); ","import React, { Suspense, lazy } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst Dashboard =lazy(() => import(\"./components/Dashboard/Dashboard\"));\r\nconst GoogleDashboard =lazy(() => import(\"./components/Dashboard/GoogleDashboard\"));\r\nconst Home = lazy(() => import(\"./components/Home/Home\")) ;\r\n\r\nconst Router = () => (\r\n    <Suspense fallback = {<div> Loading... </div>}>\r\n        <Switch>\r\n            <Route\r\n                exact path = \"/\"\r\n                component = {Home}\r\n            />\r\n            <Route\r\n                exact path = \"/dashboard\"\r\n                component = {Dashboard}\r\n            />\r\n            <Route\r\n                path = \"/auth/google/callback\"\r\n                component = {GoogleDashboard}\r\n            />\r\n        </Switch>\r\n    </Suspense>\r\n)\r\n\r\nexport default Router;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css'\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\n\r\nclass Modal extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.el = document.createElement('div')\r\n    }\r\n\r\n    componentDidMount() {\r\n        modalRoot.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        modalRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(this.props.children, this.el)\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport {  } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Logo from \"../../assets/AC-Logo.svg\";\r\nimport FacebookLogo from \"../../assets/facebook.svg\";\r\nimport GoogleLogo from \"../../assets/googleplus.svg\";\r\nimport { setPage, toggleModalState, loadUser, fetchAndSetUser } from '../../actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\tpage: state.changePage.page,\r\n\tisModalOpen: state.toggleModal.isModalOpen,\r\n\tuser: state.fetchAndSetUser.user\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\tonPageChange: (page) => dispatch(setPage(page)),\r\n\ttoggleModal: (isModalOpen) => dispatch(toggleModalState(isModalOpen)),\r\n    setUserState: (user) => dispatch(loadUser(user)),\r\n\tfetchAndSetUser: () => dispatch(fetchAndSetUser())\r\n    \r\n  }\r\n}\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                name: '',\r\n                email: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                name: event.target.value\r\n            }\r\n        }))\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                email: event.target.value\r\n            }\r\n        }))\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                password: event.target.value\r\n            }\r\n        }))\r\n    }\r\n\r\n    onLogin = () =>{\r\n        console.log(this.state.user);\r\n        this.props.toggleModal(\"none\");\r\n        this.props.setUserState(this.state.user);\r\n    }\r\n\r\n    onGoogleLogin = async () =>{\r\n        console.log('google Login init');\r\n        this.props.toggleModal('none');\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"login-container\">\r\n                <div className=\"Login\">\r\n                    <img src={Logo} className='login-logo' alt=\"\" width='26%'/>\r\n                    <div className=\"welcome text-primary\">\r\n                        Welcome!\r\n                    </div>\r\n                    <div className=\"card-bkg form-container\">\r\n                        <form action=\"/login\" method=\"post\" className='form'>\r\n                            Email: <br/>\r\n                            <input type=\"text\"     placeholder='Enter Email' name=\"username\" className='inputs' id=\"email-box\"/>\r\n                            <br/>\r\n                            Password: <br/>\r\n                            <input type=\"password\"  placeholder='Enter Password' name=\"password\" className='inputs' id=\"password-box\"/>\r\n                            <br/>\r\n                            <div className=\"btn-group-local\">\r\n                                <input type = 'submit' value='Log In' onClick={this.onLogin}  className='btn-signup-form button'/>\r\n                                <input type=\"button\"  onClick={() => this.props.toggleModal('none')} className='btn-cancel-form button' value=\"Cancel\"/>\r\n                            </div> <hr/>\r\n                            <span className=\"or-login-with\">Or login with</span>\r\n                            <div className=\"btn-group-oauth\">\r\n                                <a href ='auth/google' onClick={this.onGoogleLogin} className=\"btn-group btn-google-form button\">\r\n                                    <img src={GoogleLogo} alt=\"\" width= '30%'className='icon'/>\r\n                                    <span  className='btn-text '>Google</span>\r\n                                </a>\r\n                                <span className=\"or\">or</span>\r\n                                <a href ='auth/google' onClick={this.onGoogleLogin} className=\"btn-group btn-facebook-form button\">\r\n                                    <img src={FacebookLogo} alt=\"\" width= '28%' className='icon'/>\r\n                                    <span className='btn-text '>Facebook</span>\r\n                                </a>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Login/Login.css\";\r\nimport Logo from \"../../assets/AC-Logo.svg\";\r\nimport FacebookLogo from \"../../assets/facebook.svg\"\r\nimport GoogleLogo from \"../../assets/googleplus.svg\"\r\nimport { connect } from \"react-redux\";\r\nimport { setPage, toggleModalState, loadUser, fetchAndSetUser } from '../../actions/actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\tpage: state.changePage.page,\r\n\tisModalOpen: state.toggleModal.isModalOpen,\r\n\tuser: state.fetchAndSetUser.user\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\tonPageChange: (page) => dispatch(setPage(page)),\r\n\ttoggleModal: (isModalOpen) => dispatch(toggleModalState(isModalOpen)),\r\n    setUserState: (user) => dispatch(loadUser(user)),\r\n\tfetchAndSetUser: () => dispatch(fetchAndSetUser())\r\n    \r\n  }\r\n}\r\n\r\nclass SignUp extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            auth: 'local'\r\n        }\r\n\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onEmailChange = this.onEmailChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n\r\n    }\r\n\r\n    onNameChange(event){\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    \r\n    onEmailChange(event){\r\n        this.setState({ email: event.target.value });\r\n    }\r\n    \r\n    onPasswordChange(event){\r\n        this.setState({ password: event.target.value });\r\n    }\r\n    onLogin = () => {\r\n        console.log(\"set auth\" , this.state);\r\n        this.props.setUserState(this.state);\r\n        console.log( \" USER: \", this.state)\r\n        this.props.toggleModal(\"none\");\r\n\r\n        fetch('/local/signup', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => console.log(\"sign in resp\", data));\r\n\r\n    }\r\n\r\n    onGoogleLogin = async () =>{\r\n        console.log('google Login init');\r\n        this.props.user.auth = \"google\";\r\n        this.props.toggleModal('none');\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"login-container\">\r\n                <div className=\"SignUp\">\r\n                    <div className=\"welcome text-primary\">\r\n                        Welcome!\r\n                    </div>\r\n                    <div className=\"card-bkg form-container\">\r\n                        <form action=\"/login\" method=\"post\" className='form form-flex'>\r\n                            <div className=\"left-col\">\r\n                                Name: <br/>\r\n                                <input type=\"text\"  onChange={this.onNameChange}    placeholder='Enter Name' name=\"username\" className='inputs' id=\"name-box\"\r\n                                />\r\n                                <br/>\r\n                                Email: <br/>\r\n                                <input type=\"email\"  onChange={this.onEmailChange}   placeholder='Enter Email' name=\"email\" className='inputs' id=\"email-box\"/>\r\n                                <br/>\r\n                                Password: <br/>\r\n                                <input type=\"password\" onChange={this.onPasswordChange} placeholder='Enter Password' name=\"password\" className='inputs' id=\"password-box\"/>\r\n                                <br/>\r\n                                Confirm Password: <br/>\r\n                                <input type=\"password\"  placeholder='Confirm Password' name=\"re-password\" className='inputs' id=\"re-password-box\"/>\r\n                                <br/>\r\n                                <div className=\"btn-group-local\">\r\n                                    <Link exact to='/dashboard' onClick={this.onLogin} type=\"button\"  className='btn-signup-form button'>Sign Up</Link>\r\n                                    <input type=\"button\"  onClick={() => this.props.toggleModal('none')} className='btn-cancel-form button' value=\"Cancel\"/>\r\n                                </div> \r\n                            </div>\r\n                            <div className=\"right-col\">\r\n                                <img src={Logo} className='login-logo' alt=\"\" width='40%'/>\r\n                                <span className=\"or-login-with\">Or login with</span> <br/>\r\n                                <a href ='auth/google' onClick={this.onGoogleLogin} className=\"btn-group btn-group-oauth btn-google-form button\">\r\n                                    <img src={GoogleLogo} alt=\"\" width= '30%'className='icon'/>\r\n                                    <span  className='btn-text '>Google</span>\r\n                                </a>\r\n                                <span className=\"or btn-group-oauth\">or</span>\r\n                                <a href ='auth/google' onClick={this.onGoogleLogin} className=\"btn-group btn-group-oauth btn-facebook-form button\">\r\n                                    <img src={FacebookLogo} alt=\"\" width= '28%' className='icon'/>\r\n                                    <span className='btn-text '>Facebook</span>\r\n                                </a>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);;\r\n","import React, { Component } from 'react';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport Router from './Router';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Modal from \"./components/Modal/Modal\";\r\n\r\nimport Login from './components/Login/Login';\r\nimport { connect } from \"react-redux\";\r\nimport './App.css';\r\nimport \"./palette.css\"\r\nimport { setPage, toggleModalState, loadUser, fetchAndSetUser } from './actions/actions';\r\nimport SignUp from './components/SignUp/SignUp';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\tpage: state.changePage.page,\r\n\tisModalOpen: state.toggleModal.isModalOpen,\r\n\tuser: state.fetchAndSetUser.user,\r\n\tisPending: state.fetchAndSetUser.isPending\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\tonPageChange: (page) => dispatch(setPage(page)),\r\n\ttoggleModal: (isModalOpen) => dispatch(toggleModalState(isModalOpen)),\r\n\tsetUserState: (user) => dispatch(loadUser(user)),\r\n\tfetchAndSetUser: () => dispatch(fetchAndSetUser())\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n\tcomponentDidMount(){\r\n\t\tconsole.log('mount')\r\n\t\t// this.props.fetchAndSetUser(FETCH_USER);\r\n\t\t\r\n\t\tif(this.props.user.auth !== 'local')\r\n\t\t\tthis.props.fetchAndSetUser();\r\n\t\t\t// fetch('/api/current_user')\r\n\t\t\t// \t.then(res => res.json())\r\n\t\t\t// \t.then(user => {\r\n\t\t\t// \t\tthis.props.setUserState(user);\r\n\t\t\t// \t})\r\n\t}\r\n\t\r\n\tmodalSwitch = value => {\r\n\t\tswitch(value){\r\n\t\t\tcase \"login\": \r\n\t\t\t\treturn(\r\n\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t<Login \tsetUserState = {this.props.setUserState} \r\n\t\t\t\t\t\t\t\ttoggleModal = {this.props.toggleModal}/>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t);\r\n\t\t\tcase \"signup\":\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<Modal>\r\n\t\t\t\t\t\t<SignUp setUserState = {this.props.setUserState} \r\n\t\t\t\t\t\t\t\ttoggleModal = {this.props.toggleModal}/>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t);\r\n\t\t\tdefault: return;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<NavBar/>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.isModalOpen !== 'none' &&\r\n\t\t\t\t\t\tthis.modalSwitch(this.props.isModalOpen)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Router/>\r\n\t\t\t\t</div>\r\n\t\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { \r\n    SET_PAGE_VALUE, \r\n    TOGGLE_MODAL, \r\n    LOAD_USER, \r\n    FETCH_USER_PENDING,\r\n    FETCH_USER_SUCCESS\r\n} from \"../constants\";\r\n\r\nconst initialStatePage = {\r\n    page : window.location.pathname\r\n}\r\n\r\nexport const changePage = (state= initialStatePage, action={}) => {\r\n    switch(action.type){\r\n        case SET_PAGE_VALUE:\r\n            return Object.assign({}, state, {page: action.payload})\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateModal = {\r\n    isModalOpen: 'none'\r\n}\r\n\r\nexport const toggleModal = (state= initialStateModal, action={}) => {\r\n    switch(action.type){\r\n        case TOGGLE_MODAL:\r\n            return Object.assign({}, state, {isModalOpen: action.payload})\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateUser = {\r\n    user: {\r\n        googleID: 0,\r\n        name: 'John Doe',\r\n        email: 'john@email.com',\r\n        password:'',\r\n        auth: 'no user',\r\n    },\r\n    isPending: false\r\n}\r\n\r\nexport const fetchAndSetUser = (state = initialStateUser, action={}) => {\r\n    console.log('reducing', action);\r\n    switch(action.type){\r\n        case FETCH_USER_PENDING: \r\n            return Object.assign({}, state, {isPending: true})\r\n        case FETCH_USER_SUCCESS:\r\n            return Object.assign({}, state, {user: action.payload, isPending: false})\r\n        case LOAD_USER:\r\n            return Object.assign({}, state, {user: action.payload, isPending: false})\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport reduxThunk from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { changePage, toggleModal, fetchAndSetUser } from './reducers/reducers';\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({ changePage, toggleModal, fetchAndSetUser });\r\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk, logger));\r\n\r\nReactDOM.render((\r\n    <Provider store = {store}>\r\n        <App />\r\n    </Provider>\r\n    ), document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}